---

- name: Install requirements
  apt: name="{{ item }}"
    state=present
  with_items:
    - python-lxml
    - unzip
    - curl

# Unsupported according to Atlassian, but have been running fine for years here... YMMV
# Seems to be an issue for years https://jira.atlassian.com/browse/CONF-16431
- name: Install OpenJDK 8
  apt: name=openjdk-8-jdk
    state=present
    install_recommends=no

- name: Create dedicated application group
  group: name={{ atlassian_confluence_group }}
    system=no
    gid={{ atlassian_confluence_gid }}
    state=present 

- name: Create dedicated user account
  user: name="{{ atlassian_confluence_user }}"
    uid={{ atlassian_confluence_uid }}
    system=no
    createhome=no
    comment="Atlassian Confluence"
    group={{ atlassian_confluence_group }}
    home=/nonexistant
    shell=/bin/false
    state=present

- name: Create directories
  file: path="{{ item.path }}"
    state=directory
    owner="{{ item.owner }}"
    group="{{ item.group }}"
    mode="{{ item.mode }}"
  with_items:
    - { path: "{{ atlassian_confluence_basedir }}",
        owner: 'root',
        group: 'root',
        mode: '0751' }
    - { path: "{{ atlassian_confluence_home }}",
        owner: "{{ atlassian_confluence_user }}",
        group: "{{ atlassian_confluence_group }}",
        mode: '0750' }
    - { path: "{{ atlassian_confluence_home }}/restore",
        owner: "{{ atlassian_confluence_user }}",
        group: "{{ atlassian_confluence_group }}",
        mode: '0750' }

- name: Download atlassian-confluence tar.gz
  get_url: url="{{ atlassian_confluence_download_url }}"
    dest="{{ atlassian_confluence_download_tmp }}"
    force=no

- name: Extract the atlassian-confluence tar.gz
  unarchive: src="{{ atlassian_confluence_download_tmp }}"
    dest="{{ atlassian_confluence_basedir }}"
    copy=no
    creates="{{ atlassian_confluence_dir }}"
    owner=root
    group=root
    
- include: buildnumber.yml
  tags: buildnumber

- name: Set directory permissions
  file: path="{{ item.path }}"
    state=directory
    owner="{{ item.owner }}"
    group="{{ item.group }}"
  with_items:
    - { path: "{{ atlassian_confluence_dir }}/temp",
        owner: "{{ atlassian_confluence_user }}",
        group: "{{ atlassian_confluence_group }}" }
    - { path: "{{ atlassian_confluence_dir }}/work",
        owner: "{{ atlassian_confluence_user }}",
        group: "{{ atlassian_confluence_group }}" }
    - { path: "{{ atlassian_confluence_dir }}/logs",
        owner: "{{ atlassian_confluence_user }}",
        group: "{{ atlassian_confluence_group }}" }

- name: Set confluence.home variable
  lineinfile: dest="{{ atlassian_confluence_dir }}/confluence/WEB-INF/classes/confluence-init.properties"
    regexp="^\\s*confluence.home\\s*="
    insertafter=EOF
    line="confluence.home = {{ atlassian_confluence_home }}"
    state=present 


- name: Configure server.xml
  xml: file="{{ atlassian_confluence_dir }}/conf/server.xml"
    xpath="{{ item.xpath }}"
    ensure="{{ item.ensure|default('present') }}"
    attribute="{{ item.attribute|default(omit) }}"
    value="{{ item.value|default(omit) }}"
  with_items: "{{ atlassian_confluence_server_xml }}"
  notify: confluence_restart

- name: Restrict direct JVM access to localhost
  xml: file="{{ atlassian_confluence_dir }}/conf/server.xml"
    xpath=/Server/Service/Connector
    ensure=present
    attribute=address
    value='::1'
  notify: confluence_restart

# setenv.sh manipulation
- name: Ensure extra Catalina enviroment settings are configured (1)
  lineinfile: dest="{{ atlassian_confluence_dir }}/bin/setenv.sh"
    regexp='^CATALINA_OPTS_ANSIBLE='
    line='CATALINA_OPTS_ANSIBLE="{{ atlassian_confluence_catalina_opts|join(" ")}}"'
    insertbefore='^CATALINA_OPTS'
  notify: confluence_restart
  tags: [catalina, catalina_opts, setenv]
  
- name: Ensure extra Catalina enviroment settings are configured (2)
  lineinfile: dest="{{ atlassian_confluence_dir }}/bin/setenv.sh"
    regexp='^CATALINA_OPTS="\$\{CATALINA_OPTS_ANSIBLE\} '
    line='CATALINA_OPTS="${CATALINA_OPTS_ANSIBLE} ${CATALINA_OPTS}"'
    insertbefore='^export CATALINA_OPTS'
  notify: confluence_restart
  tags: [catalina, catalina_opts, setenv]

- name: Ensure minimum JVM heap size is configured
  lineinfile:
    dest: "{{ atlassian_confluence_dir }}/bin/setenv.sh"
    regexp: '^(.*Xms)\d+[kKmMgG](.*)$'
    backrefs: yes
    # https://serverfault.com/questions/825372/ansible-replace-regex-with-variable
    line: '\g<1>{{ atlassian_confluence_catalina_opts_xms }}\2'
  notify: confluence_restart
  tags: [catalina, catalina_opts, setenv]

- name: Ensure maximum JVM heap size is configured
  lineinfile:
    dest: "{{ atlassian_confluence_dir }}/bin/setenv.sh"
    regexp: '^(.*Xmx)\d+[kKmMgG](.*)$'
    backrefs: yes
    # https://serverfault.com/questions/825372/ansible-replace-regex-with-variable
    line: '\g<1>{{ atlassian_confluence_catalina_opts_xmx }}\2'
  notify: confluence_restart
  tags: [catalina, catalina_opts, setenv]
  


  # Don't start out with a fresh config after the install succedded. 
  # Reconsider using XML module to work on this file - that'll be less destructive that just copying...
- name: Set up confluence.cfg.xml
  template: src=confluence.cfg.xml
    dest="{{ atlassian_confluence_home }}/confluence.cfg.xml"
  when: atlassian_confluence_setupstep != 'complete'

- name: create systemd startup sctipts
  template: src=startup-systemd.j2
    dest=/etc/systemd/system/confluence.service
  register: service

- name: Reload service definition
  shell: 'systemctl daemon-reload'
  when: service.changed

- name: Ensure service is enabled
  service: name=confluence
    enabled=yes
    state=started

- name: Wait for JVM to come up
  wait_for: host=localhost
    port=8090
    delay=2
    timeout=120
    state=started
